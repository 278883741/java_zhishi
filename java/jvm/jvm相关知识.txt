Java 虚拟机在执行 Java 程序的过程中会把它管理的内存划分成若干个不同的数据区域。
线程私有的：
  1.程序计数器
  2.Java 虚拟机栈 - 局部变量表主要存放了编译器可知的各种数据类型；会抛如下异常
  StackOverFlowError： 若Java虚拟机栈的内存大小不允许动态扩展，那么当线程请求栈的深度超过当前Java虚拟机栈的最大深度的时候，就抛出StackOverFlowError异常。
  OutOfMemoryError： 若 Java 虚拟机栈的内存大小允许动态扩展，且当线程请求栈时内存用完了，无法再动态扩展了，此时抛出OutOfMemoryError异常。
  3.本地方法栈
现成共享的：
  1.堆 - Java 虚拟机所管理的内存中最大的一块，Java 堆是所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例以及数组都在这里分配内存。Java 堆是垃圾收集器管理的主要区域，因此也被称作GC堆。
  2.方法区 - 它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据
  3.运行时常量池 - 在java堆中（1.7以后）

对象创建的5个步骤
1.类加载检查
2.分配内存
3. 初始化零值
4. 设置对象头
5. 执行 init 方法

String s1 = new String("abc"); // 这句话创建了几个对象？
先有字符串 “abc” 放入常量池，然后 new 了一份字符串 “abc” 放入 Java 堆。
